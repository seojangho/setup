" General
set encoding=utf-8
set nocompatible
filetype plugin indent on

" Plugins
call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-sensible'
Plug 'rust-lang/rust.vim'
Plug 'vim-syntastic/syntastic'
Plug 'chr4/nginx.vim'
Plug 'stephpy/vim-yaml'
Plug 'Yggdroot/indentLine'
Plug 'tpope/vim-fugitive'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommenter'
Plug 'tpope/vim-surround'
" Plug 'jiangmiao/auto-pairs'
Plug 'cbracken/vala.vim'
Plug 'leafgarland/typescript-vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'lervag/vimtex'
" Plug 'plasticboy/vim-markdown'
Plug 'elmcast/elm-vim'
Plug 'wakatime/vim-wakatime'
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'garbas/vim-snipmate'
Plug 'google/vim-maktaba'
Plug 'google/vim-codefmt'
Plug 'google/vim-glaive'
Plug 'ycm-core/YouCompleteMe', { 'do': './install.py --all'  }
"Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

" vim-airline
set laststatus=2
set noshowmode
set t_Co=256
let g:airline_theme='badwolf'
let g:airline#extensions#tabline#enabled = 0
let g:airline_powerline_fonts = 1

" indentLine
let g:indentLine_color_term = 239
let g:indentLine_color_gui = '#AAAAAA'
let g:indentLine_char = '│'

" editorconfig
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_cpp_compiler_options = '-std=c++17'

" Indent
set shiftwidth=2
set softtabstop=2
set expandtab
set autoindent
set smartindent
set breakindent

" Interface
syntax on
color desert
set visualbell
set mouse=
set showcmd
set number
set numberwidth=5
set matchpairs+=“:”
set matchpairs+=‘:’
set showmatch
au BufEnter,WinEnter * match ErrorMsg '\s\+$'
  " highlight trailing whitespace
set backspace=indent,eol,start
  " allow backspacing over everything in insert mode

" Search
set hlsearch
set nowrapscan
map <space> /

" Hot keys
vmap <Tab> >gv
vmap <S-Tab> <gv
map <F2> :NERDTreeToggle<CR>
let g:UltiSnipsExpandTrigger='<c-j>'
nnoremap <leader>jd :YcmCompleter GoTo<CR>

" clipboard
set clipboard=unnamedplus

" Load addins
for addin in split(globpath('~/.setup/this', '**/vimrc_addin'), '\n')
  exec "source ".addin
endfor

" Plugins
call plug#end()

" google/vim-glaive
call glaive#Install()

" google/vim-codefmt
Glaive codefmt plugin[mappings]
augroup autoformat_settings
  autocmd FileType bzl AutoFormatBuffer buildifier
  autocmd FileType c,cpp,proto,javascript AutoFormatBuffer clang-format
  autocmd FileType dart AutoFormatBuffer dartfmt
  autocmd FileType go AutoFormatBuffer gofmt
  autocmd FileType gn AutoFormatBuffer gn
  autocmd FileType html,css,sass,scss,less,json AutoFormatBuffer js-beautify
  autocmd FileType java AutoFormatBuffer google-java-format
  autocmd FileType python AutoFormatBuffer yapf
  autocmd FileType vue AutoFormatBuffer prettier
augroup END
