#!/bin/bash

elementIn() {
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
  return 1
}

isSystemScript() {
  [[ $(readlink -f "$1") =~ ^"$SETUPDIR"/system/ ]]
}

isPreSystemScript() {
  [[ $(readlink -f "$1") =~ ^"$SETUPDIR"/pre-system/ ]]
}

SETUPDIR=$(dirname "$(readlink -f "$0")")
export SETUPDIR

# Prepare message file
MSGFILE=$(mktemp)
export MSGFILE

# What to do
if [[ $1 == "--update" ]]
then
  # update setup itself
  workingdir=$(pwd)
  cd "$SETUPDIR"
  git pull || echo "Cannot update setup: $?" >> "$MSGFILE"
  cd "$workingdir"
  prefix="update"
else
  prefix="install"
fi

# Get list of snapins
declare -a snapins
while read -r snapin
do
  snapins+=($(cat "$snapin"))
done < <(find -L "$SETUPDIR"/this -name "SNAPIN")

# Get list of scripts
declare -a scripts
for snapin in "${snapins[@]}"
do
  while read -r script
  do
    scripts+=("$script")
  done < <(find -L "$SETUPDIR"/this -name "${prefix}-${snapin}")
done

# Execute pre-system scripts, only once for a file
for (( i=0; i<${#scripts[@]}; i++ ));
do
  if elementIn "${scripts[$i]}" "${scripts[@]:$((i+1))}"; then
    continue
  fi
  if ! isPreSystemScript "${scripts[$i]}"; then
    continue
  fi
  ${scripts[$i]}
done

# Execute system scripts, only once for a file
for (( i=0; i<${#scripts[@]}; i++ ));
do
  if elementIn "${scripts[$i]}" "${scripts[@]:$((i+1))}"; then
    continue
  fi
  if ! isSystemScript "${scripts[$i]}"; then
    continue
  fi
  ${scripts[$i]}
done

# Execute non-system scripts, only once for a file
for (( i=0; i<${#scripts[@]}; i++ ));
do
  if elementIn "${scripts[$i]}" "${scripts[@]:$((i+1))}"; then
    continue
  fi
  if isPreSystemScript "${scripts[$i]}"; then
    continue
  fi
  if isSystemScript "${scripts[$i]}"; then
    continue
  fi
  ${scripts[$i]}
done

# echo message file
echo -e "\e[33m"
cat "$MSGFILE"
echo -e "\e[0m"

exit 0
